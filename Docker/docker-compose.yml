version: '3.9'

services:
  postgres:
    image: postgis/postgis:latest
    profiles:
      - optional
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: behd1d2
      POSTGRES_DB: magellon01
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:rw
      - ./postgres/conf:/etc/postgresql/postgresql.conf:rw
    ports:
      - "5432:5432"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.6

  mysql:
    image: mysql:8.0.30
    profiles:
      - default
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/conf:/etc/mysql/conf
      - ./mysql/init/magellon02db.sql:/docker-entrypoint-initdb.d/magellon02db.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci  --lower-case-table-names=1
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.7


  rabbitmq:
    image: rabbitmq:management-alpine
    profiles:
      - default
#    image: rabbitmq:latest
#    image: rabbitmq:3-management
    hostname: my-rabbit
    restart: unless-stopped
    container_name: rabbitmq-container
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq  # Persist data
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      magellon-network:
        ipv4_address: 172.16.238.8

  consul:
    image: consul:1.15.4
    profiles:
      - default
    restart: unless-stopped
    container_name: consul-container
    ports:
      - "${CONSUL_PORT}:8500"
    volumes:
      - ./consul/data:/consul/data
      - ./consul/config:/consul/config
    networks:
      magellon-network:
        ipv4_address: 172.16.238.9


  prometheus:
    image: prom/prometheus:latest
    profiles:
      - optional
    restart: unless-stopped
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.11

  grafana:
    image: grafana/grafana:latest
    profiles:
      - optional
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./grafana/config.monitoring
    networks:
      magellon-network:
        ipv4_address: 172.16.238.12

  backend:
    build:
      context: ../CoreService
      dockerfile: Dockerfile
    image: magellon-core-image
    profiles:
      - default
    container_name: magellon-core-container
    restart: unless-stopped
    ports:
      - "${MAGELLON_BACKEND_PORT}:80"
    volumes:
      - ${MAGELLON_HOME_PATH}:/magellon
      - ${MAGELLON_GPFS_PATH}:/gpfs
    environment:
      - APP_ENV=production
      - CORE_ENV =docker
      - GPFS_PATH=${MAGELLON_GPFS_PATH}
      - HOME_PATH=${MAGELLON_HOME_PATH}
      - CONSUL_HOST=consul
      - RABBITMQ_HOST=rabbitmq
    networks:
      magellon-network:
        ipv4_address: 172.16.238.15
        
#  web:
#    build:
#      context: ../magellon-react-app
#      dockerfile: Dockerfile
#    image: magellon-react-app-image
#    container_name: magellon-react-app-container
#    restart: unless-stopped
#    depends_on:
#      - backend
#    ports:
#      - "8080:80"
#    environment:
#      - BACKEND_HOST=backend
#      - CONSUL_HOST=consul
#      - REACT_APP_API_URL=http://backend:5000
#    networks:
#      magellon-network:
#        ipv4_address: 172.16.238.16


  magellon_result_plugin:
    build:
      context: ../plugins/magellon_result_processor
      dockerfile: Dockerfile
    image: magellon_result_plugin_image
    profiles:
      - default
    container_name: magellon_ctf_result_container
    environment:
      - APP_ENV=production
      - GPFS_ROOT=${MAGELLON_HOME_PATH}
      - JOBS_PATH=${MAGELLON_JOBS_PATH}
    volumes:
      - ${MAGELLON_HOME_PATH}:/gpfs
    ports:
      - "${MAGELLON_RESULT_PLUGIN_PORT}:80"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.20        
        
  magellon_ctf_plugin:
    build:
      context: ../plugins/magellon_ctf_plugin
      dockerfile: Dockerfile
    image: magellon_ctf_plugin_image
    profiles:
      - default
    container_name: magellon_ctf_plugin_container
    environment:
      - APP_ENV=production
      - GPFS_ROOT=${MAGELLON_GPFS_PATH}
      - JOBS_PATH=${MAGELLON_JOBS_PATH}
    volumes:
      - ${MAGELLON_GPFS_PATH}:/gpfs
      - ${MAGELLON_JOBS_PATH}:/jobs
    ports:
      - "${MAGELLON_CTF_PLUGIN_PORT}:80"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.21

volumes:
  rabbitmq-data: { }
  postgres_data: { }
  app_data:  # Define a named volume for application data
  cache:
    driver: local

networks:
  magellon-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
