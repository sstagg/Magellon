services:


  mysql:
    image: mysql:8.2.0
    container_name: magellon-mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ${MAGELLON_ROOT_DIR}/services/mysql/data:/var/lib/mysql:rw
      - ${MAGELLON_ROOT_DIR}/services/mysql/conf:/etc/mysql/conf
      - ${MAGELLON_ROOT_DIR}/services/mysql/init/magellon01db.sql:/docker-entrypoint-initdb.d/magellon01db.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci  --lower-case-table-names=1
    restart: always
    user: "999:999"
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.7

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: magellon-dragonfly-container
    restart: unless-stopped
    volumes:
      - dragonfly-data:/data
    ports:
      - "${DRAGONFLY_PORT:-6379}:6379"
    environment:
      - DRAGONFLY_REQUIREPASS=${DRAGONFLY_PASSWORD:-password}
    networks:
      magellon-network:
        ipv4_address: 172.16.238.10
    ulimits:
      memlock: -1
    command: --logtostdout=true
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 4G
          cpus: '1'


  nats:
    image: nats:latest
    command: -js  # Enable JetStream
    container_name: magellon-nats-container
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    volumes:
      - nats-data:/data  # For JetStream storage
    networks:
      magellon-network:
        ipv4_address: 172.16.238.13
    restart: unless-stopped


  rabbitmq:
    image: rabbitmq:management-alpine
    #    image: rabbitmq:latest
    #    image: rabbitmq:3-management
    hostname: my-rabbit
    restart: unless-stopped
    container_name: magellon-rabbitmq-container
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq  # Persist data
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      magellon-network:
        ipv4_address: 172.16.238.8

  consul:
    image: consul:1.15.4
    restart: unless-stopped
    container_name: magellon-consul-container
    ports:
      - "${CONSUL_PORT}:8500"
    volumes:
      - ${MAGELLON_ROOT_DIR}/services/consul/data:/consul/data
      - ${MAGELLON_ROOT_DIR}/services/consul/config:/consul/config
    networks:
      magellon-network:
        ipv4_address: 172.16.238.9


  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: magellon-prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ${MAGELLON_ROOT_DIR}/services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.11

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: magellon-grafana-container
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - 'grafana_storage:/var/lib/grafana'
      - '${MAGELLON_ROOT_DIR}/services/grafana/grafana.db:/tmp/grafana.db'
    command: |
      sh -c "cp /tmp/grafana.db /var/lib/grafana/grafana.db && /run.sh"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER_NAME}      # Default admin username
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_USER_PASS}    # Default admin password
    networks:
      magellon-network:
        ipv4_address: 172.16.238.12

  backend:
    build:
      context: ../CoreService
      dockerfile: Dockerfile
    image: magellon-core-image
    container_name: magellon-core-container
    restart: unless-stopped
    ports:
      - "${MAGELLON_BACKEND_PORT}:80"
    volumes:
      - ${MAGELLON_HOME_PATH}:/magellon
      - ${MAGELLON_GPFS_PATH}:/gpfs
    environment:
      - APP_ENV=production
      - RUN_ENV=docker
      - GPFS_PATH=${MAGELLON_GPFS_PATH}
      - HOME_PATH=${MAGELLON_HOME_PATH}
      - CONSUL_HOST=consul
      - RABBITMQ_HOST=rabbitmq
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=${DRAGONFLY_PASSWORD:-password}
    networks:
      magellon-network:
        ipv4_address: 172.16.238.15

  web:
    build:
      context: ../magellon-react-app
      dockerfile: Dockerfile
      args:
        API_URL: http://localhost:${MAGELLON_BACKEND_PORT}
    image: magellon-react-app-image
    container_name: magellon-react-app-container
    restart: unless-stopped
    ports:
      - "${MAGELLON_FRONTEND_PORT}:80"
    environment:
      - BACKEND_HOST=backend
      - CONSUL_HOST=consul
      - API_URL=http://localhost:${MAGELLON_BACKEND_PORT}
    networks:
      magellon-network:
        ipv4_address: 172.16.238.16


  magellon_result_plugin:
    build:
      context: ../plugins/magellon_result_processor
      dockerfile: Dockerfile
    image: magellon_result_plugin_image
    container_name: magellon_result_container
    environment:
      - APP_ENV=production
      - RUN_ENV=docker
      - GPFS_ROOT=${MAGELLON_GPFS_PATH}
      - HOME_PATH=${MAGELLON_HOME_PATH}
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=${DRAGONFLY_PASSWORD:-password}
    volumes:
      - ${MAGELLON_GPFS_PATH}:/gpfs
      - ${MAGELLON_JOBS_PATH}:/jobs
      - ${MAGELLON_HOME_PATH}:/magellon
    ports:
      - "${MAGELLON_RESULT_PLUGIN_PORT}:80"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.20

  magellon_ctf_plugin:
    build:
      context: ../plugins/magellon_ctf_plugin
      dockerfile: Dockerfile
    image: magellon_ctf_plugin_image
    container_name: magellon_ctf_plugin_container
    environment:
      - APP_ENV=production
      - RUN_ENV=docker
      - GPFS_ROOT=${MAGELLON_GPFS_PATH}
      - JOBS_PATH=${MAGELLON_JOBS_PATH}
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=${DRAGONFLY_PASSWORD:-password}
    volumes:
      - ${MAGELLON_HOME_PATH}:/magellon
      - ${MAGELLON_GPFS_PATH}:/gpfs
      - ${MAGELLON_JOBS_PATH}:/jobs
    ports:
      - "${MAGELLON_CTF_PLUGIN_PORT}:80"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.21

  magellon_motioncor_plugin:
    build:
      context: ../plugins/magellon_motioncor_plugin
      dockerfile: Dockerfile
      args:
        CUDA_IMAGE: ${CUDA_IMAGE}
        MOTIONCOR_BINARY: ${MOTIONCOR_BINARY}
    image: magellon_motioncor_plugin_image
    container_name: magellon_motioncor_plugin_containerf
    environment:
      - APP_ENV=production
      - RUN_ENV=docker
      - GPFS_ROOT=${MAGELLON_GPFS_PATH}
      - JOBS_PATH=${MAGELLON_JOBS_PATH}
      - CUDA_IMAGE=${CUDA_IMAGE}
      - MOTIONCOR_BINARY=${MOTIONCOR_BINARY}
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=${DRAGONFLY_PASSWORD:-password}
    volumes:
      - ${MAGELLON_HOME_PATH}:/magellon
      - ${MAGELLON_GPFS_PATH}:/gpfs
      - ${MAGELLON_JOBS_PATH}:/jobs
    ports:
      - "${MAGELLON_MOTIONCOR_PLUGIN_PORT}:80"
    networks:
      magellon-network:
        ipv4_address: 172.16.238.22
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  # Named volumes for all services
  rabbitmq-data: { }
  nats-data: { }
  postgres_data: { }
  grafana_storage: { }
  dragonfly-data: { }  # Added volume for Dragonfly
  app_data:  # Define a named volume for application data
  cache:
    driver: local

networks:
  magellon-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24